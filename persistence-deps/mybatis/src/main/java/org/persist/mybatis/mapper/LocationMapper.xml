<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.persist.mybatis.dao.LocationMapper" >
  <resultMap id="BaseResultMap" type="org.sonatype.mavenbook.weather.model.Location" >
    <id column="ZIP" property="zip" jdbcType="VARCHAR" />
    <result column="CITY" property="city" jdbcType="VARCHAR" />
    <result column="COUNTRY" property="country" jdbcType="VARCHAR" />
    <result column="REGION" property="region" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <!-- *******************混合OR,AND********************* -->
   <sql id="Example_Where_Clause_Wu" >
    <where >
      <!-- 取OR的条件 -->
      <if test="oredCriteria.size > 0" >
      
      <foreach collection="oredCriteria" item="criteria" open="(" close=")" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
      </if>
      <if test="oredCriteria.size>0 and andedCriteria.size>0"> or </if>
      <!-- 取and的条件 -->
      <foreach collection="andedCriteria" item="criteria" open="(" close=")" separator="and" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
      
    </where>
  </sql> 
  
  <!-- **************************************** -->
  
  
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ZIP, CITY, COUNTRY, REGION
  </sql>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.sonatype.mavenbook.weather.model.LocationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from LOCATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <!-- wu add -->
  <select id="selectBySearchCriteria" resultMap="BaseResultMap" parameterType="org.sonatype.mavenbook.weather.model.SearchCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from LOCATION
    <if test="_parameter != null" >
      <!-- <include refid="Example_Where_Clause" /> -->
      <include refid="Example_Where_Clause_Wu" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWu" resultMap="BaseResultMap" parameterType="org.sonatype.mavenbook.weather.model.LocationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from LOCATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause_Wu" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <!-- 
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from LOCATION
    where ZIP = #{zip,jdbcType=VARCHAR}
  </select> -->
  <!-- wu add -->
  <select id="findByZip" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from LOCATION
    where ZIP = #{zip,jdbcType=VARCHAR}
  </select>
  <select id="findAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from LOCATION 
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from LOCATION
    where ZIP = #{zip,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.sonatype.mavenbook.weather.model.LocationExample" >
    delete from LOCATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="org.sonatype.mavenbook.weather.model.Location" >
    insert into LOCATION (ZIP, CITY, COUNTRY, 
      REGION)
    values (#{zip,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, 
      #{region,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.sonatype.mavenbook.weather.model.Location" >
    insert into LOCATION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="zip != null" >
        ZIP,
      </if>
      <if test="city != null" >
        CITY,
      </if>
      <if test="country != null" >
        COUNTRY,
      </if>
      <if test="region != null" >
        REGION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="zip != null" >
        #{zip,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        #{region,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <select id="countByExample" parameterType="org.sonatype.mavenbook.weather.model.LocationExample" resultType="java.lang.Integer" >
    select count(*) from LOCATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExampleSelective" parameterType="map" >
    update LOCATION
    <set >
      <if test="record.zip != null" >
        ZIP = #{record.zip,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        CITY = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null" >
        COUNTRY = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null" >
        REGION = #{record.region,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update LOCATION
    set ZIP = #{record.zip,jdbcType=VARCHAR},
      CITY = #{record.city,jdbcType=VARCHAR},
      COUNTRY = #{record.country,jdbcType=VARCHAR},
      REGION = #{record.region,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.sonatype.mavenbook.weather.model.Location" >
    update LOCATION
    <set >
      <if test="city != null" >
        CITY = #{city,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        COUNTRY = #{country,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        REGION = #{region,jdbcType=VARCHAR},
      </if>
    </set>
    where ZIP = #{zip,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.sonatype.mavenbook.weather.model.Location" >
    update LOCATION
    set CITY = #{city,jdbcType=VARCHAR},
      COUNTRY = #{country,jdbcType=VARCHAR},
      REGION = #{region,jdbcType=VARCHAR}
    where ZIP = #{zip,jdbcType=VARCHAR}
  </update>
</mapper>