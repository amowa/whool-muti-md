<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.persist.mybatis.dao.WindMapper" >
  <resultMap id="BaseResultMap" type="org.sonatype.mavenbook.weather.model.Wind" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="CHILL" property="chill" jdbcType="VARCHAR" />
    <result column="DIRECTION" property="direction" jdbcType="VARCHAR" />
    <result column="SPEED" property="speed" jdbcType="VARCHAR" />
    <result column="WEATHER_ID" property="weatherId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, CHILL, DIRECTION, SPEED, WEATHER_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.sonatype.mavenbook.weather.model.WindExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from WIND
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from WIND
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <!-- selectByWeatherId -->
  <select id="selectByWeatherId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from WIND
    where WEATHER_ID = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from WIND
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.sonatype.mavenbook.weather.model.WindExample" >
    delete from WIND
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.sonatype.mavenbook.weather.model.Wind" >
    insert into WIND (ID, CHILL, DIRECTION, 
      SPEED, WEATHER_ID)
    values (#{id,jdbcType=INTEGER}, #{chill,jdbcType=VARCHAR}, #{direction,jdbcType=VARCHAR}, 
      #{speed,jdbcType=VARCHAR}, #{weatherId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.sonatype.mavenbook.weather.model.Wind" >
    insert into WIND
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="chill != null" >
        CHILL,
      </if>
      <if test="direction != null" >
        DIRECTION,
      </if>
      <if test="speed != null" >
        SPEED,
      </if>
      <if test="weatherId != null" >
        WEATHER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="chill != null" >
        #{chill,jdbcType=VARCHAR},
      </if>
      <if test="direction != null" >
        #{direction,jdbcType=VARCHAR},
      </if>
      <if test="speed != null" >
        #{speed,jdbcType=VARCHAR},
      </if>
      <if test="weatherId != null" >
        #{weatherId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.sonatype.mavenbook.weather.model.WindExample" resultType="java.lang.Integer" >
    select count(*) from WIND
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update WIND
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.chill != null" >
        CHILL = #{record.chill,jdbcType=VARCHAR},
      </if>
      <if test="record.direction != null" >
        DIRECTION = #{record.direction,jdbcType=VARCHAR},
      </if>
      <if test="record.speed != null" >
        SPEED = #{record.speed,jdbcType=VARCHAR},
      </if>
      <if test="record.weatherId != null" >
        WEATHER_ID = #{record.weatherId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update WIND
    set ID = #{record.id,jdbcType=INTEGER},
      CHILL = #{record.chill,jdbcType=VARCHAR},
      DIRECTION = #{record.direction,jdbcType=VARCHAR},
      SPEED = #{record.speed,jdbcType=VARCHAR},
      WEATHER_ID = #{record.weatherId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.sonatype.mavenbook.weather.model.Wind" >
    update WIND
    <set >
      <if test="chill != null" >
        CHILL = #{chill,jdbcType=VARCHAR},
      </if>
      <if test="direction != null" >
        DIRECTION = #{direction,jdbcType=VARCHAR},
      </if>
      <if test="speed != null" >
        SPEED = #{speed,jdbcType=VARCHAR},
      </if>
      <if test="weatherId != null" >
        WEATHER_ID = #{weatherId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.sonatype.mavenbook.weather.model.Wind" >
    update WIND
    set CHILL = #{chill,jdbcType=VARCHAR},
      DIRECTION = #{direction,jdbcType=VARCHAR},
      SPEED = #{speed,jdbcType=VARCHAR},
      WEATHER_ID = #{weatherId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>